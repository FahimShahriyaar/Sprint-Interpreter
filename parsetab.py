
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/ACTION BOOL BY CALL DECIMAL FLAG FLOAT FROM ID INTEGER LOOP OTHERWISE READ STRING TO WHEN WHOLE WORD WRITEprogram : program statement\n               | statement statement : declaration\n                 | assignment\n                 | print\n                 | read\n                 | loop\n                 | conditional\n                 | function\n                 | calldeclaration : type ID\n                   | type ID '=' exprassignment : ID '=' exprloop : LOOP FROM INTEGER TO INTEGER BY INTEGER bodyconditional : WHEN expr body when_otherwisewhen_otherwise : OTHERWISE conditional\n                      | OTHERWISE body\n                      |function : ACTION type ID '{' params '}' bodyparams : params type ID \n              | type ID\n              | body : '[' program ']' print : WRITE expr read : READ ID call : CALL ID '{' arg '}' arg : arg expr\n           | expr\n           |expr : expr '+' expr\n            | expr '-' expr\n            | expr '*' expr\n            | expr '/' expr\n            | expr '<' expr\n            | expr '>' expr\n            | expr '<' '=' expr\n            | expr '>' '=' expr\n            | expr '=' '=' expr\n            | expr '<' '>' expr\n            | '(' expr ')'\n            | expr_valtype : WHOLE\n            | DECIMAL\n            | WORD\n            | FLAGexpr_val : INTEGER\n               | FLOAT\n               | STRING\n               | BOOL\n               | ID"
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,41,42,43,44,45,46,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,69,71,72,73,74,75,76,78,79,80,81,83,84,87,91,92,],[12,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,24,33,34,33,38,-42,-43,-44,-45,-1,-11,33,-24,33,-41,-46,-47,-48,-49,-50,-25,52,33,-13,33,33,33,33,33,33,-18,12,33,-12,-30,-31,-32,-33,-34,33,33,-35,33,33,-40,-15,12,33,-28,-36,-39,-37,-38,-16,-17,-23,86,-26,-27,90,-19,-14,]),'WRITE':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[13,13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,13,-12,-30,-31,-32,-33,-34,-35,-40,-15,13,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'READ':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[14,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,14,-12,-30,-31,-32,-33,-34,-35,-40,-15,14,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'LOOP':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[15,15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,15,-12,-30,-31,-32,-33,-34,-35,-40,-15,15,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'WHEN':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,68,69,73,74,75,76,78,79,80,83,91,92,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,16,-12,-30,-31,-32,-33,-34,-35,-40,-15,16,16,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'ACTION':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,17,-12,-30,-31,-32,-33,-34,-35,-40,-15,17,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'CALL':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,18,-12,-30,-31,-32,-33,-34,-35,-40,-15,18,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'WHOLE':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,70,73,74,75,76,78,79,80,82,83,86,90,91,92,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,19,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,19,-12,-30,-31,-32,-33,-34,-35,-40,-15,19,19,-36,-39,-37,-38,-16,-17,-23,19,-26,-21,-20,-19,-14,]),'DECIMAL':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,70,73,74,75,76,78,79,80,82,83,86,90,91,92,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,20,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,20,-12,-30,-31,-32,-33,-34,-35,-40,-15,20,20,-36,-39,-37,-38,-16,-17,-23,20,-26,-21,-20,-19,-14,]),'WORD':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,70,73,74,75,76,78,79,80,82,83,86,90,91,92,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,21,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,21,-12,-30,-31,-32,-33,-34,-35,-40,-15,21,21,-36,-39,-37,-38,-16,-17,-23,21,-26,-21,-20,-19,-14,]),'FLAG':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,50,51,54,55,56,57,58,59,62,65,67,69,70,73,74,75,76,78,79,80,82,83,86,90,91,92,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,22,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,22,-12,-30,-31,-32,-33,-34,-35,-40,-15,22,22,-36,-39,-37,-38,-16,-17,-23,22,-26,-21,-20,-19,-14,]),'$end':([1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,54,55,56,57,58,59,62,65,67,73,74,75,76,78,79,80,83,91,92,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,-12,-30,-31,-32,-33,-34,-35,-40,-15,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),']':([2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,50,54,55,56,57,58,59,62,65,67,69,73,74,75,76,78,79,80,83,91,92,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-41,-46,-47,-48,-49,-50,-25,-13,-18,-12,-30,-31,-32,-33,-34,-35,-40,-15,80,-36,-39,-37,-38,-16,-17,-23,-26,-19,-14,]),'=':([12,24,26,28,29,30,31,32,33,36,40,45,46,47,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[25,39,47,-41,-46,-47,-48,-49,-50,47,47,60,63,64,47,47,-30,-31,-32,-33,47,47,-40,47,47,47,47,47,47,]),'(':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,84,],[27,27,27,27,-41,-46,-47,-48,-49,-50,27,27,27,27,27,27,27,27,-30,-31,-32,-33,-34,27,27,-35,27,27,-40,27,-28,-36,-39,-37,-38,-27,]),'INTEGER':([13,16,25,27,28,29,30,31,32,33,35,39,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,66,71,72,73,74,75,76,84,85,],[29,29,29,29,-41,-46,-47,-48,-49,-50,49,29,29,29,29,29,29,29,29,-30,-31,-32,-33,-34,29,29,-35,29,29,-40,77,29,-28,-36,-39,-37,-38,-27,89,]),'FLOAT':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,84,],[30,30,30,30,-41,-46,-47,-48,-49,-50,30,30,30,30,30,30,30,30,-30,-31,-32,-33,-34,30,30,-35,30,30,-40,30,-28,-36,-39,-37,-38,-27,]),'STRING':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,84,],[31,31,31,31,-41,-46,-47,-48,-49,-50,31,31,31,31,31,31,31,31,-30,-31,-32,-33,-34,31,31,-35,31,31,-40,31,-28,-36,-39,-37,-38,-27,]),'BOOL':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,53,55,56,57,58,59,60,61,62,63,64,65,71,72,73,74,75,76,84,],[32,32,32,32,-41,-46,-47,-48,-49,-50,32,32,32,32,32,32,32,32,-30,-31,-32,-33,-34,32,32,-35,32,32,-40,32,-28,-36,-39,-37,-38,-27,]),'FROM':([15,],[35,]),'+':([26,28,29,30,31,32,33,36,40,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[41,-41,-46,-47,-48,-49,-50,41,41,41,41,-30,-31,-32,-33,41,41,-40,41,41,41,41,41,41,]),'-':([26,28,29,30,31,32,33,36,40,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[42,-41,-46,-47,-48,-49,-50,42,42,42,42,-30,-31,-32,-33,42,42,-40,42,42,42,42,42,42,]),'*':([26,28,29,30,31,32,33,36,40,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[43,-41,-46,-47,-48,-49,-50,43,43,43,43,43,43,-32,-33,43,43,-40,43,43,43,43,43,43,]),'/':([26,28,29,30,31,32,33,36,40,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[44,-41,-46,-47,-48,-49,-50,44,44,44,44,44,44,-32,-33,44,44,-40,44,44,44,44,44,44,]),'<':([26,28,29,30,31,32,33,36,40,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[45,-41,-46,-47,-48,-49,-50,45,45,45,45,-30,-31,-32,-33,45,45,-40,45,45,45,45,45,45,]),'>':([26,28,29,30,31,32,33,36,40,45,48,54,55,56,57,58,59,62,65,72,73,74,75,76,84,],[46,-41,-46,-47,-48,-49,-50,46,46,61,46,46,-30,-31,-32,-33,46,46,-40,46,46,46,46,46,46,]),'[':([28,29,30,31,32,33,36,55,56,57,58,59,62,65,68,73,74,75,76,88,89,],[-41,-46,-47,-48,-49,-50,51,-30,-31,-32,-33,-34,-35,-40,51,-36,-39,-37,-38,51,51,]),')':([28,29,30,31,32,33,48,55,56,57,58,59,62,65,73,74,75,76,],[-41,-46,-47,-48,-49,-50,65,-30,-31,-32,-33,-34,-35,-40,-36,-39,-37,-38,]),'}':([28,29,30,31,32,33,53,55,56,57,58,59,62,65,70,71,72,73,74,75,76,82,84,86,90,],[-41,-46,-47,-48,-49,-50,-29,-30,-31,-32,-33,-34,-35,-40,-22,83,-28,-36,-39,-37,-38,88,-27,-21,-20,]),'{':([38,52,],[53,70,]),'TO':([49,],[66,]),'OTHERWISE':([50,80,],[68,-23,]),'BY':([77,],[85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,51,],[1,69,]),'statement':([0,1,51,69,],[2,23,2,23,]),'declaration':([0,1,51,69,],[3,3,3,3,]),'assignment':([0,1,51,69,],[4,4,4,4,]),'print':([0,1,51,69,],[5,5,5,5,]),'read':([0,1,51,69,],[6,6,6,6,]),'loop':([0,1,51,69,],[7,7,7,7,]),'conditional':([0,1,51,68,69,],[8,8,8,78,8,]),'function':([0,1,51,69,],[9,9,9,9,]),'call':([0,1,51,69,],[10,10,10,10,]),'type':([0,1,17,51,69,70,82,],[11,11,37,11,11,81,87,]),'expr':([13,16,25,27,39,41,42,43,44,45,46,53,60,61,63,64,71,],[26,36,40,48,54,55,56,57,58,59,62,72,73,74,75,76,84,]),'expr_val':([13,16,25,27,39,41,42,43,44,45,46,53,60,61,63,64,71,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'body':([36,68,88,89,],[50,79,91,92,]),'when_otherwise':([50,],[67,]),'arg':([53,],[71,]),'params':([70,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','parser.py',11),
  ('program -> statement','program',1,'p_program','parser.py',12),
  ('statement -> declaration','statement',1,'p_statement','parser.py',20),
  ('statement -> assignment','statement',1,'p_statement','parser.py',21),
  ('statement -> print','statement',1,'p_statement','parser.py',22),
  ('statement -> read','statement',1,'p_statement','parser.py',23),
  ('statement -> loop','statement',1,'p_statement','parser.py',24),
  ('statement -> conditional','statement',1,'p_statement','parser.py',25),
  ('statement -> function','statement',1,'p_statement','parser.py',26),
  ('statement -> call','statement',1,'p_statement','parser.py',27),
  ('declaration -> type ID','declaration',2,'p_declaration','parser.py',32),
  ('declaration -> type ID = expr','declaration',4,'p_declaration','parser.py',33),
  ('assignment -> ID = expr','assignment',3,'p_assignment','parser.py',41),
  ('loop -> LOOP FROM INTEGER TO INTEGER BY INTEGER body','loop',8,'p_loop','parser.py',46),
  ('conditional -> WHEN expr body when_otherwise','conditional',4,'p_conditional','parser.py',52),
  ('when_otherwise -> OTHERWISE conditional','when_otherwise',2,'p_when_otherwise','parser.py',57),
  ('when_otherwise -> OTHERWISE body','when_otherwise',2,'p_when_otherwise','parser.py',58),
  ('when_otherwise -> <empty>','when_otherwise',0,'p_when_otherwise','parser.py',59),
  ('function -> ACTION type ID { params } body','function',7,'p_function','parser.py',67),
  ('params -> params type ID','params',3,'p_params','parser.py',72),
  ('params -> type ID','params',2,'p_params','parser.py',73),
  ('params -> <empty>','params',0,'p_params','parser.py',74),
  ('body -> [ program ]','body',3,'p_body','parser.py',84),
  ('print -> WRITE expr','print',2,'p_print','parser.py',89),
  ('read -> READ ID','read',2,'p_read','parser.py',94),
  ('call -> CALL ID { arg }','call',5,'p_call','parser.py',99),
  ('arg -> arg expr','arg',2,'p_arg','parser.py',104),
  ('arg -> expr','arg',1,'p_arg','parser.py',105),
  ('arg -> <empty>','arg',0,'p_arg','parser.py',106),
  ('expr -> expr + expr','expr',3,'p_expression','parser.py',116),
  ('expr -> expr - expr','expr',3,'p_expression','parser.py',117),
  ('expr -> expr * expr','expr',3,'p_expression','parser.py',118),
  ('expr -> expr / expr','expr',3,'p_expression','parser.py',119),
  ('expr -> expr < expr','expr',3,'p_expression','parser.py',120),
  ('expr -> expr > expr','expr',3,'p_expression','parser.py',121),
  ('expr -> expr < = expr','expr',4,'p_expression','parser.py',122),
  ('expr -> expr > = expr','expr',4,'p_expression','parser.py',123),
  ('expr -> expr = = expr','expr',4,'p_expression','parser.py',124),
  ('expr -> expr < > expr','expr',4,'p_expression','parser.py',125),
  ('expr -> ( expr )','expr',3,'p_expression','parser.py',126),
  ('expr -> expr_val','expr',1,'p_expression','parser.py',127),
  ('type -> WHOLE','type',1,'p_type','parser.py',140),
  ('type -> DECIMAL','type',1,'p_type','parser.py',141),
  ('type -> WORD','type',1,'p_type','parser.py',142),
  ('type -> FLAG','type',1,'p_type','parser.py',143),
  ('expr_val -> INTEGER','expr_val',1,'p_expr_val','parser.py',148),
  ('expr_val -> FLOAT','expr_val',1,'p_expr_val','parser.py',149),
  ('expr_val -> STRING','expr_val',1,'p_expr_val','parser.py',150),
  ('expr_val -> BOOL','expr_val',1,'p_expr_val','parser.py',151),
  ('expr_val -> ID','expr_val',1,'p_expr_val','parser.py',152),
]
