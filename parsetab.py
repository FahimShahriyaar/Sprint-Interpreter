
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/ACTION BOOL BY CALL DECIMAL FLAG FLOAT FROM ID INT LOOP OTHERWISE READ STR TO WHEN WHOLE WORD WRITEprogram : program statement\n               | statement statement : declaration\n                 | assignment\n                 | print\n                 | read\n                 | loop\n                 | conditional\n                 | function\n                 | calldeclaration : type ID\n                   | type ID '=' exprassignment : ID '=' exprloop : LOOP FROM INT TO INT BY INT bodyconditional : WHEN expr body when_otherwisewhen_otherwise : OTHERWISE conditional\n                      | OTHERWISE body\n                      |function : ACTION type ID '{' params '}' bodyparams : params type ID \n              | type ID\n              | body : '[' program ']' print : WRITE exprread : READ ID call : CALL ID '{' arg '}' arg : arg expr\n           | expr\n           |expr : expr opr expr\n            | '(' expr ')'\n            | expr_valtype : WHOLE\n            | DECIMAL\n            | WORD\n            | FLAGopr : '+' \n           | '-' \n           | '*' \n           | '/' \n           | '<' \n           | '>' \n           | '=' \n           | '<' '='\n           | '>' '='\n           | '<' '>'\n           | '=' '=' expr_val : INT\n               | FLOAT\n               | STR\n               | BOOL\n               | ID"
    
_lr_action_items = {'ID':([0,1,2,3,4,5,6,7,8,9,10,11,13,14,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,41,42,43,44,45,46,47,48,51,52,54,55,56,57,58,59,60,61,63,65,67,68,70,71,72,73,75,76,79,83,84,],[12,12,-2,-3,-4,-5,-6,-7,-8,-9,-10,24,33,34,33,38,-33,-34,-35,-36,-1,-11,33,-24,33,-32,-48,-49,-50,-51,-52,-25,53,33,-13,33,-37,-38,-39,-40,-41,-42,-43,-18,12,33,-12,-30,-44,-46,-45,-47,-31,-15,12,33,-28,-16,-17,-23,78,-26,-27,82,-19,-14,]),'WRITE':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,70,71,72,75,83,84,],[13,13,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,13,-12,-30,-31,-15,13,-16,-17,-23,-26,-19,-14,]),'READ':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,70,71,72,75,83,84,],[14,14,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,14,-12,-30,-31,-15,14,-16,-17,-23,-26,-19,-14,]),'LOOP':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,70,71,72,75,83,84,],[15,15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,15,-12,-30,-31,-15,15,-16,-17,-23,-26,-19,-14,]),'WHEN':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,64,65,70,71,72,75,83,84,],[16,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,16,-12,-30,-31,-15,16,16,-16,-17,-23,-26,-19,-14,]),'ACTION':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,70,71,72,75,83,84,],[17,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,17,-12,-30,-31,-15,17,-16,-17,-23,-26,-19,-14,]),'CALL':([0,1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,70,71,72,75,83,84,],[18,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,18,-12,-30,-31,-15,18,-16,-17,-23,-26,-19,-14,]),'WHOLE':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,66,70,71,72,74,75,78,82,83,84,],[19,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,19,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,19,-12,-30,-31,-15,19,19,-16,-17,-23,19,-26,-21,-20,-19,-14,]),'DECIMAL':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,66,70,71,72,74,75,78,82,83,84,],[20,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,20,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,20,-12,-30,-31,-15,20,20,-16,-17,-23,20,-26,-21,-20,-19,-14,]),'WORD':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,66,70,71,72,74,75,78,82,83,84,],[21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,21,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,21,-12,-30,-31,-15,21,21,-16,-17,-23,21,-26,-21,-20,-19,-14,]),'FLAG':([0,1,2,3,4,5,6,7,8,9,10,17,23,24,26,28,29,30,31,32,33,34,40,51,52,55,56,61,63,65,66,70,71,72,74,75,78,82,83,84,],[22,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,22,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,22,-12,-30,-31,-15,22,22,-16,-17,-23,22,-26,-21,-20,-19,-14,]),'$end':([1,2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,55,56,61,63,70,71,72,75,83,84,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,-12,-30,-31,-15,-16,-17,-23,-26,-19,-14,]),']':([2,3,4,5,6,7,8,9,10,23,24,26,28,29,30,31,32,33,34,40,51,55,56,61,63,65,70,71,72,75,83,84,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-1,-11,-24,-32,-48,-49,-50,-51,-52,-25,-13,-18,-12,-30,-31,-15,72,-16,-17,-23,-26,-19,-14,]),'=':([12,24,26,28,29,30,31,32,33,36,40,46,47,48,49,55,56,61,68,76,],[25,39,48,-32,-48,-49,-50,-51,-52,48,48,57,59,60,48,48,48,-31,48,48,]),'(':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,47,48,54,56,57,58,59,60,61,67,68,76,],[27,27,27,27,-32,-48,-49,-50,-51,-52,27,27,-37,-38,-39,-40,-41,-42,-43,27,-30,-44,-46,-45,-47,-31,27,-28,-27,]),'INT':([13,16,25,27,28,29,30,31,32,33,35,39,41,42,43,44,45,46,47,48,54,56,57,58,59,60,61,62,67,68,76,77,],[29,29,29,29,-32,-48,-49,-50,-51,-52,50,29,29,-37,-38,-39,-40,-41,-42,-43,29,-30,-44,-46,-45,-47,-31,69,29,-28,-27,81,]),'FLOAT':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,47,48,54,56,57,58,59,60,61,67,68,76,],[30,30,30,30,-32,-48,-49,-50,-51,-52,30,30,-37,-38,-39,-40,-41,-42,-43,30,-30,-44,-46,-45,-47,-31,30,-28,-27,]),'STR':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,47,48,54,56,57,58,59,60,61,67,68,76,],[31,31,31,31,-32,-48,-49,-50,-51,-52,31,31,-37,-38,-39,-40,-41,-42,-43,31,-30,-44,-46,-45,-47,-31,31,-28,-27,]),'BOOL':([13,16,25,27,28,29,30,31,32,33,39,41,42,43,44,45,46,47,48,54,56,57,58,59,60,61,67,68,76,],[32,32,32,32,-32,-48,-49,-50,-51,-52,32,32,-37,-38,-39,-40,-41,-42,-43,32,-30,-44,-46,-45,-47,-31,32,-28,-27,]),'FROM':([15,],[35,]),'+':([26,28,29,30,31,32,33,36,40,49,55,56,61,68,76,],[42,-32,-48,-49,-50,-51,-52,42,42,42,42,42,-31,42,42,]),'-':([26,28,29,30,31,32,33,36,40,49,55,56,61,68,76,],[43,-32,-48,-49,-50,-51,-52,43,43,43,43,43,-31,43,43,]),'*':([26,28,29,30,31,32,33,36,40,49,55,56,61,68,76,],[44,-32,-48,-49,-50,-51,-52,44,44,44,44,44,-31,44,44,]),'/':([26,28,29,30,31,32,33,36,40,49,55,56,61,68,76,],[45,-32,-48,-49,-50,-51,-52,45,45,45,45,45,-31,45,45,]),'<':([26,28,29,30,31,32,33,36,40,49,55,56,61,68,76,],[46,-32,-48,-49,-50,-51,-52,46,46,46,46,46,-31,46,46,]),'>':([26,28,29,30,31,32,33,36,40,46,49,55,56,61,68,76,],[47,-32,-48,-49,-50,-51,-52,47,47,58,47,47,47,-31,47,47,]),'[':([28,29,30,31,32,33,36,56,61,64,80,81,],[-32,-48,-49,-50,-51,-52,52,-30,-31,52,52,52,]),')':([28,29,30,31,32,33,49,56,61,],[-32,-48,-49,-50,-51,-52,61,-30,-31,]),'}':([28,29,30,31,32,33,54,56,61,66,67,68,74,76,78,82,],[-32,-48,-49,-50,-51,-52,-29,-30,-31,-22,75,-28,80,-27,-21,-20,]),'{':([38,53,],[54,66,]),'TO':([50,],[62,]),'OTHERWISE':([51,72,],[64,-23,]),'BY':([69,],[77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,52,],[1,65,]),'statement':([0,1,52,65,],[2,23,2,23,]),'declaration':([0,1,52,65,],[3,3,3,3,]),'assignment':([0,1,52,65,],[4,4,4,4,]),'print':([0,1,52,65,],[5,5,5,5,]),'read':([0,1,52,65,],[6,6,6,6,]),'loop':([0,1,52,65,],[7,7,7,7,]),'conditional':([0,1,52,64,65,],[8,8,8,70,8,]),'function':([0,1,52,65,],[9,9,9,9,]),'call':([0,1,52,65,],[10,10,10,10,]),'type':([0,1,17,52,65,66,74,],[11,11,37,11,11,73,79,]),'expr':([13,16,25,27,39,41,54,67,],[26,36,40,49,55,56,68,76,]),'expr_val':([13,16,25,27,39,41,54,67,],[28,28,28,28,28,28,28,28,]),'opr':([26,36,40,49,55,56,68,76,],[41,41,41,41,41,41,41,41,]),'body':([36,64,80,81,],[51,71,83,84,]),'when_otherwise':([51,],[63,]),'arg':([54,],[67,]),'params':([66,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','parser.py',13),
  ('program -> statement','program',1,'p_program','parser.py',14),
  ('statement -> declaration','statement',1,'p_statement','parser.py',22),
  ('statement -> assignment','statement',1,'p_statement','parser.py',23),
  ('statement -> print','statement',1,'p_statement','parser.py',24),
  ('statement -> read','statement',1,'p_statement','parser.py',25),
  ('statement -> loop','statement',1,'p_statement','parser.py',26),
  ('statement -> conditional','statement',1,'p_statement','parser.py',27),
  ('statement -> function','statement',1,'p_statement','parser.py',28),
  ('statement -> call','statement',1,'p_statement','parser.py',29),
  ('declaration -> type ID','declaration',2,'p_declaration','parser.py',34),
  ('declaration -> type ID = expr','declaration',4,'p_declaration','parser.py',35),
  ('assignment -> ID = expr','assignment',3,'p_assignment','parser.py',43),
  ('loop -> LOOP FROM INT TO INT BY INT body','loop',8,'p_loop','parser.py',48),
  ('conditional -> WHEN expr body when_otherwise','conditional',4,'p_conditional','parser.py',54),
  ('when_otherwise -> OTHERWISE conditional','when_otherwise',2,'p_when_otherwise','parser.py',59),
  ('when_otherwise -> OTHERWISE body','when_otherwise',2,'p_when_otherwise','parser.py',60),
  ('when_otherwise -> <empty>','when_otherwise',0,'p_when_otherwise','parser.py',61),
  ('function -> ACTION type ID { params } body','function',7,'p_function','parser.py',69),
  ('params -> params type ID','params',3,'p_params','parser.py',74),
  ('params -> type ID','params',2,'p_params','parser.py',75),
  ('params -> <empty>','params',0,'p_params','parser.py',76),
  ('body -> [ program ]','body',3,'p_body','parser.py',86),
  ('print -> WRITE expr','print',2,'p_print','parser.py',91),
  ('read -> READ ID','read',2,'p_read','parser.py',96),
  ('call -> CALL ID { arg }','call',5,'p_call','parser.py',101),
  ('arg -> arg expr','arg',2,'p_arg','parser.py',106),
  ('arg -> expr','arg',1,'p_arg','parser.py',107),
  ('arg -> <empty>','arg',0,'p_arg','parser.py',108),
  ('expr -> expr opr expr','expr',3,'p_expression','parser.py',118),
  ('expr -> ( expr )','expr',3,'p_expression','parser.py',119),
  ('expr -> expr_val','expr',1,'p_expression','parser.py',120),
  ('type -> WHOLE','type',1,'p_type','parser.py',133),
  ('type -> DECIMAL','type',1,'p_type','parser.py',134),
  ('type -> WORD','type',1,'p_type','parser.py',135),
  ('type -> FLAG','type',1,'p_type','parser.py',136),
  ('opr -> +','opr',1,'p_opr','parser.py',141),
  ('opr -> -','opr',1,'p_opr','parser.py',142),
  ('opr -> *','opr',1,'p_opr','parser.py',143),
  ('opr -> /','opr',1,'p_opr','parser.py',144),
  ('opr -> <','opr',1,'p_opr','parser.py',145),
  ('opr -> >','opr',1,'p_opr','parser.py',146),
  ('opr -> =','opr',1,'p_opr','parser.py',147),
  ('opr -> < =','opr',2,'p_opr','parser.py',148),
  ('opr -> > =','opr',2,'p_opr','parser.py',149),
  ('opr -> < >','opr',2,'p_opr','parser.py',150),
  ('opr -> = =','opr',2,'p_opr','parser.py',151),
  ('expr_val -> INT','expr_val',1,'p_expr_val','parser.py',158),
  ('expr_val -> FLOAT','expr_val',1,'p_expr_val','parser.py',159),
  ('expr_val -> STR','expr_val',1,'p_expr_val','parser.py',160),
  ('expr_val -> BOOL','expr_val',1,'p_expr_val','parser.py',161),
  ('expr_val -> ID','expr_val',1,'p_expr_val','parser.py',162),
]
